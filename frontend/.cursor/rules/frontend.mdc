---
description: rules for frontend development
globs:
alwaysApply: true
---
- NEVER EVER add comments to code. The only exceptions are you can add a docstring
  to a function or module. Otherwise, NO COMMENTS.

- when starting on a medium to large sized change, first write a markdown
  project plan into the folder .cursor/projects/, and ask for review

- as you work, update the project plan and mark tasks as complete

- only work on one phase of a project at a time. always ask before continuing to
  the next phase

- never use a check like process.env.NODE_ENV === "test" to get around failing
  tests

- use *kebab-case* for Typescript file names

- ALWAYS run tests using the shell tool after implementing them or making edits
  to them. Be clever about running the tests at useful times to get info about
  how work is progressing. We're not done until all the tests are passing.

- if error info needs to be returned to the calling function, just throw an
  appropriate error. do not return an object with error info. This rule does not
  apply to server actions, which can return error info in the response.

- ALWAYS use frontend components from /components/ui when possible

- if a shadcn ui component is not available in /components/ui, install it with
  `npx shadcn@latest add component-name`

- When testing async React components, use this pattern:
  render(await MyPage({params: Promise.resolve({ docId: mockDocId })}));

- ALWAYS use lucide-react for icons if possible

- use server actions instead of api routes in next.js

- do not show error messages with internal information to users. Show a generic
  error message and console.error() the details

- for toast messages, call sonner directly

- the command to run all tests from the shell command tool is simply `npm test`

- create and modify sql schemas in /db/schema. Do not edit
  `/supabase/migrations/` -- this is autogenerated
